name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyversion: ['3.5','3.8']
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{matrix.pyversion}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{matrix.pyversion}}
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codacy-coverage
    - name: Run migrations
      run: cd decide;python manage.py migrate
    - name: Cambiar a local_settings.py para las pruebas
      run: cp decide/local_settings_local.py decide/local_settings.py
    - name: Run Postproc tests     
      run: cd decide;./manage.py test postproc
    - name: Run Booth tests     
      run: cd decide;./manage.py test booth/tests.py
    - name: Run Postproc tests with coverage   
      run: cd decide;coverage run ./manage.py test postproc; coverage xml;
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1.1.0
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: ${{github.ref == 'refs/heads/deployGitHubActions' }} 
    steps:
    - uses: actions/checkout@v1
    - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "egc-sierrezuela1"
          heroku_email: "sierrezueladecide1@gmail.com"
    - run: heroku run -a egc-sierrezuela1 sh -c "python decide/manage.py shell -c \"from django.contrib.auth.models import User; User.objects.filter(username='admin') or User.objects.create_superuser('admin', 'admin@example.com', 'admin')\""
